Index: src/API_calls/GetTrackDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package API_calls;\n\nimport okhttp3.*;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\n\npublic class GetTrackDetails {\n    private static final String token = GetToken.getToken();\n    static String songLink = \"https://open.spotify.com/track/0QVO36SaIlLGXiGZoMG6sO\";\n    // we'll just ask the user to input the link to the song\n    public static void main(String[] args) throws IOException {\n        int index = songLink.indexOf(\"track/\");\n        String songID = songLink.substring(index + \"track/\".length()); //removes everything before the trackID\n        String api_call = \"https://api.spotify.com/v1/tracks/\" + songID;\n        // the above just gets the track id and combines it to the general api call\n        OkHttpClient client = new OkHttpClient(); //builds an http request\n        Request request = new Request.Builder().url(api_call).addHeader(\"Authorization\", \"Bearer \" + token ).build();\n        Response songInfo = client.newCall(request).execute();\n        ResponseBody responseBody = songInfo.body();\n        String jsonResponse = responseBody.string();\n        JSONObject jsonInfo = new JSONObject(jsonResponse);\n        Integer popularity = jsonInfo.getInt(\"popularity\");\n        JSONObject jsonAlbum = jsonInfo.getJSONObject(\"album\");\n        String release_date = jsonAlbum.getString(\"release_date\");\n        System.out.println(popularity);\n        System.out.println(release_date);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/API_calls/GetTrackDetails.java b/src/API_calls/GetTrackDetails.java
--- a/src/API_calls/GetTrackDetails.java	(revision 25a28cd4bd8faaf770bb53aea0d3e4b85b6b011d)
+++ b/src/API_calls/GetTrackDetails.java	(date 1700775588935)
@@ -4,6 +4,7 @@
 import org.json.JSONObject;
 
 import java.io.IOException;
+import java.util.ArrayList;
 
 public class GetTrackDetails {
     private static final String token = GetToken.getToken();
@@ -26,4 +27,8 @@
         System.out.println(popularity);
         System.out.println(release_date);
     }
+
+    public ArrayList<Object> getTrackInfo(String songID) {
+        
+    }
 }
Index: src/DataBase/DataBase.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DataBase/DataBase.json b/src/DataBase/DataBase.json
--- a/src/DataBase/DataBase.json	(revision 25a28cd4bd8faaf770bb53aea0d3e4b85b6b011d)
+++ b/src/DataBase/DataBase.json	(date 1700773740062)
@@ -1,0 +1,3 @@
+{"Username": {"playlist2":["links"],
+  "playlist name":["links"]}
+ }
\ No newline at end of file
Index: src/DataBase/DataAccessInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DataBase;\nimport com.opencsv.CSVReader;\nimport com.opencsv.CSVReaderBuilder;\nimport com.opencsv.CSVWriter;\nimport com.opencsv.exceptions.CsvException;\nimport entity.Song;\nimport java.io.*;\nimport java.util.*;\n\n\npublic class DataAccessInterface {\n    public void addUser(String Username) throws IOException {\n        String[] userData = {Username, \"\", \"\"};\n        CSVWriter writer = new CSVWriter(new FileWriter(\"UserPlaylists.csv\"));\n        List<String[]> data = getFileData();\n\n        if(checkUserExists(data, Username)) {\n            System.out.println(\"Username already exists choose new name\");\n        }\n        else {\n            data.add(userData);\n        }\n        writer.writeAll(data);\n        writer.close();\n\n\n    }\n\n    private boolean checkUserExists(List<String[]> data, String username){\n        for (String[] line : data) {\n            if (line[0].equals(username))\n                return true;\n        }\n        return false;\n\n    }\n    public void addPlaylist(ArrayList<Song> playlist,String Username, String playlistName ) throws IOException {\n        CSVWriter writer = new CSVWriter(new FileWriter(\"UserPlaylists.csv\"));\n        List<String[]> data = getFileData();\n\n\n    }\n\n    public ArrayList<Song>[] getPlaylist(String playlistName, String username) {\n        return null;\n    }\n\n    public ArrayList<Song>[] getUserPlaylists(String username) {\n        return null;\n    }\n\n    private static List<String[]> getFileData(){\n        try {\n            CSVReader reader = new CSVReaderBuilder(new FileReader(\"UsersPlaylists.csv\")).build();\n            return reader.readAll();\n        } catch (IOException | CsvException e) {\n            System.out.println(\"broke lmao\");\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DataBase/DataAccessInterface.java b/src/DataBase/DataAccessInterface.java
--- a/src/DataBase/DataAccessInterface.java	(revision 25a28cd4bd8faaf770bb53aea0d3e4b85b6b011d)
+++ b/src/DataBase/DataAccessInterface.java	(date 1700773505509)
@@ -1,47 +1,57 @@
 package DataBase;
-import com.opencsv.CSVReader;
-import com.opencsv.CSVReaderBuilder;
-import com.opencsv.CSVWriter;
-import com.opencsv.exceptions.CsvException;
+import API_calls.GetTrackDetails;
 import entity.Song;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
+import org.json.simple.parser.*;
 import java.io.*;
 import java.util.*;
 
 
 public class DataAccessInterface {
-    public void addUser(String Username) throws IOException {
-        String[] userData = {Username, "", ""};
-        CSVWriter writer = new CSVWriter(new FileWriter("UserPlaylists.csv"));
-        List<String[]> data = getFileData();
-
-        if(checkUserExists(data, Username)) {
-            System.out.println("Username already exists choose new name");
+    public  void addUser(String Username) throws IOException, ParseException {
+        JSONObject joe = getFileData();
+        Map m = new LinkedHashMap();
+        if(checkUserExists(joe, Username)){
+            System.out.println("L");
         }
-        else {
-            data.add(userData);
-        }
-        writer.writeAll(data);
-        writer.close();
-
+        else
+            joe.put(Username, m);
+        PrintWriter pw = new PrintWriter("/Users/derekdsouza/Documents/Intellij projects/GroupProject/src/DataBase/DataBase.json");
+        pw.write(joe.toJSONString());
+        pw.flush();
+        pw.close();
 
     }
 
-    private boolean checkUserExists(List<String[]> data, String username){
-        for (String[] line : data) {
-            if (line[0].equals(username))
-                return true;
-        }
-        return false;
+    private boolean checkUserExists(JSONObject data, String Username){
+        return data.containsKey(Username);
+    }
+    public void addPlaylist(String[] playlist, String Username, String playlistName) throws IOException, ParseException {
+        JSONObject joe = getFileData();
+        JSONArray jar = new JSONArray();
+        Map m = ((Map) joe.get(Username));
+        for(String song : playlist)
+            jar.add(song);
+        m.put(playlistName, jar);
+        System.out.println(m);
+        joe.put(Username, m);
+        PrintWriter pw = new PrintWriter("/Users/derekdsouza/Documents/Intellij projects/GroupProject/src/DataBase/DataBase.json");
+        pw.write(joe.toJSONString());
+        pw.flush();
+        pw.close();
 
     }
-    public void addPlaylist(ArrayList<Song> playlist,String Username, String playlistName ) throws IOException {
-        CSVWriter writer = new CSVWriter(new FileWriter("UserPlaylists.csv"));
-        List<String[]> data = getFileData();
 
-
-    }
-
-    public ArrayList<Song>[] getPlaylist(String playlistName, String username) {
+    public ArrayList<Song> getPlaylist(String playlistName, String Username) throws IOException, ParseException {
+        JSONObject joe = getFileData();
+        Map m = ((Map) joe.get(Username));
+        ArrayList<String> playlistLinks = ((ArrayList<String>) m.get(playlistName));
+        ArrayList<Song> playlist = new ArrayList<Song>();
+        for(String link : playlistLinks) {
+            // Not sure how this is implemented to work on it
+            ArrayList<> song = GetTrackDetails(link);
+        }
         return null;
     }
 
@@ -49,12 +59,8 @@
         return null;
     }
 
-    private static List<String[]> getFileData(){
-        try {
-            CSVReader reader = new CSVReaderBuilder(new FileReader("UsersPlaylists.csv")).build();
-            return reader.readAll();
-        } catch (IOException | CsvException e) {
-            System.out.println("broke lmao");
-        }
+    private JSONObject getFileData() throws IOException, ParseException {
+        Object obj = new JSONParser().parse(new FileReader("/Users/derekdsouza/Documents/Intellij projects/GroupProject/src/DataBase/DataBase.json"));
+        return (JSONObject) obj;
     }
 }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>SpotifyApiPractice</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>20</maven.compiler.source>\n        <maven.compiler.target>20</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n    <repositories>\n        <repository>\n            <id>central</id>\n            <url>https://repo.maven.apache.org/maven2</url>\n        </repository>\n    </repositories>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.squareup.okhttp3</groupId>\n            <artifactId>okhttp</artifactId>\n            <version>3.14.4</version>\n        </dependency>\n        <dependency>\n            <groupId>org.json</groupId>\n            <artifactId>json</artifactId>\n            <version>20210307</version> \n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.12.5</version> \n        </dependency>\n\n\n    </dependencies>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 25a28cd4bd8faaf770bb53aea0d3e4b85b6b011d)
+++ b/pom.xml	(date 1700770959915)
@@ -37,6 +37,11 @@
             <artifactId>jackson-databind</artifactId>
             <version>2.12.5</version> 
         </dependency>
+        <dependency>
+            <groupId>com.googlecode.json-simple</groupId>
+            <artifactId>json-simple</artifactId>
+            <version>1.1.1</version>
+        </dependency>
 
 
     </dependencies>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"cab78199-2601-497a-a4db-cda67d0735a3\" name=\"Changes\" comment=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\">\n      <change afterPath=\"$PROJECT_DIR$/src/use_case/CreatePlaylist/CreatePlaylistInteractor.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/SpotifyApiPractice.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SpotifyApiPractice.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/API_calls/GetPlaylist.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/API_calls/GetPlaylist.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2Y98PBqIoZ8DeqXx8rEShfhTt0b\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CreateClassDialog.RecentsKey\">\n      <recent name=\"idk\" />\n      <recent name=\"SpotifyApiDataAccessObject\" />\n      <recent name=\"\" />\n      <recent name=\"data_access\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.GetSimilarPlaylists\">\n    <configuration name=\"GetSimilarPlaylists\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"openjdk-20\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"API_calls.GetSimilarPlaylists\" />\n      <module name=\"SpotifyApiPractice\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"API_calls.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"SpotifyApiDataAccessObject\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"openjdk-20\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"SpotifyApiDataAccessObject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"API_calls.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"Group_spotify\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"Group_spotify\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"cab78199-2601-497a-a4db-cda67d0735a3\" name=\"Changes\" comment=\"\" />\n      <created>1699926408190</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1699926408190</updated>\n      <workItem from=\"1699926409453\" duration=\"63000\" />\n      <workItem from=\"1699926481543\" duration=\"980000\" />\n      <workItem from=\"1700273342035\" duration=\"62000\" />\n      <workItem from=\"1700274534928\" duration=\"1098000\" />\n      <workItem from=\"1700275646806\" duration=\"59000\" />\n      <workItem from=\"1700423917735\" duration=\"956000\" />\n      <workItem from=\"1700534363423\" duration=\"592000\" />\n      <workItem from=\"1700610717712\" duration=\"13270000\" />\n      <workItem from=\"1700666467432\" duration=\"1895000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Updated the entities\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700614655743</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700614655743</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Updated the entities\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700620300922</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700620300922</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700621488050</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700621488050</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700625376680</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700625376680</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700625507165</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700625507165</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700625587666</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700625587666</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700625680664</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700625680664</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"main\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Updated the entities\" />\n    <MESSAGE value=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Updated the entities, created the data storage objects and did the mergePlaylists interactor.\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 25a28cd4bd8faaf770bb53aea0d3e4b85b6b011d)
+++ b/.idea/workspace.xml	(date 1700775589474)
@@ -5,11 +5,19 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="cab78199-2601-497a-a4db-cda67d0735a3" name="Changes" comment="Updated the entities, created the data storage objects and did the mergePlaylists interactor.">
-      <change afterPath="$PROJECT_DIR$/src/use_case/CreatePlaylist/CreatePlaylistInteractor.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SpotifyApiPractice.iml" beforeDir="false" afterPath="$PROJECT_DIR$/SpotifyApiPractice.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/API_calls/GetPlaylist.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/API_calls/GetPlaylist.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/API_calls/GetTrackDetails.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/API_calls/GetTrackDetails.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DataBase/DataAccessInterface.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DataBase/DataAccessInterface.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DataBase/DataBase.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/DataBase/DataBase.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/data_access/GetSimilarPlaylists.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/data_access/GetTrackDetails.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/data_access/SpotifyApiDataAccessObject.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/Playlist.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/entity/Playlist.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/PlaylistsHistory.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/entity/PlaylistsHistory.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/generate/GenerateState.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/interface_adapter/generate/GenerateState.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/src/use_case/merge_playlist.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/GenerateView.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/GenerateView.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -60,7 +68,20 @@
       <recent name="data_access" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.GetSimilarPlaylists">
+  <component name="RunManager" selected="Application.CardLayoutExample">
+    <configuration name="CardLayoutExample" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Examples.CardLayoutExample" />
+      <module name="SpotifyApiPractice" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="Examples.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="GetSimilarPlaylists" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="ALTERNATIVE_JRE_PATH" value="openjdk-20" />
       <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
@@ -103,6 +124,11 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.CardLayoutExample" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
